

```{r}
suppressMessages(library(tidyverse))
suppressMessages(library(gtsummary))
suppressMessages(library(tidyr))
suppressMessages(library(here))
suppressMessages(library(kableExtra))
suppressMessages(library(plotly))
```


# Interactions (L5) {.unnumbered}

This chapter contains the content of the fifth lecture of the course BIO144 Data Analysis in Biology at the University of Zurich.


## Introduction

Interactions are some of the most interesting phenomena in science, including biology. We are not talking about interactions between species, like predation, though these are also very interesting. We are talking about effects of one thing, like diet, depending on another thing, like exercise. Lets break that down a bit...

Imagine we make a study of the effect of exercise (minutes per week) on blood pressure for people with a meat heavy diet.

```{r}
#| eval = FALSE
set.seed(1)
n <- 50
mins_per_week <- runif(n, 0, 200)
diet <- rep("meat heavy", n)
bp <- 100 - 0.1*mins_per_week + rnorm(n, 0, 10)
bp_diet_meatheavy <- data.frame(bp, mins_per_week, diet)
write_csv(bp_diet_meatheavy, here::here("data", "bp_diet_meatheavy.csv"))
```


<a href="data/bp_diet_meatheavy.csv" download>
  Download the dataset.
</a>


```{r}
#| echo = TRUE
bp_diet_meatheavy <- read_csv(here::here("data", "bp_diet_meatheavy.csv"))
head(bp_diet_meatheavy)
```

```{r}
p_meat <- ggplot(bp_diet_meatheavy, aes(x=mins_per_week, y=bp)) + 
  geom_point(col = "red") +
  geom_smooth(formula = y ~ x, method="lm", col = "red") +
  theme_minimal() +
  labs(title="Blood pressure vs exercise for meat heavy diet",
       x="Minutes per week of exercise",
       y="Blood pressure") +
  ylim(60, 120)
p_meat
```

We see that exercise seems to lower blood pressure. But what if we look at the effect of exercise on blood pressure for people with a vegetarian diet?

```{r}
#| eval = FALSE
n <- 50
mins_per_week <- runif(n, 0, 200)
diet <- rep("vegetarian", n)
bp <- 85 - 0.01*mins_per_week + rnorm(n, 0, 10)
bp_diet_vegetarian <- data.frame(bp, mins_per_week, diet)
write_csv(bp_diet_vegetarian, here::here("data", "bp_diet_vegetarian.csv"))
```


<a href="data/bp_diet_vegetarian.csv" download>
  Download the dataset.
</a>


```{r}
#| echo = TRUE
bp_diet_vegetarian <- read_csv(here::here("data", "bp_diet_vegetarian.csv"))
head(bp_diet_vegetarian)
```

```{r}
p_veg <- ggplot(bp_diet_vegetarian, aes(x=mins_per_week, y=bp)) + 
  geom_point(col = "blue") +
  geom_smooth(formula = y ~ x, method="lm", col = "blue") +
  theme_minimal() +
  labs(title="Blood pressure vs exercise for vegetarian diet",
       x="Minutes per week of exercise",
       y="Blood pressure")+
  ylim(60, 120)
p_veg
```

We see that exercise seems to lower blood pressure for vegetarians too, but the effect seems to be weaker.

To summarise this finding, we can say that the effect of exercise on blood pressure is stronger for people with a meat heavy diet than for people with a vegetarian diet. This means that the effect of exercise on blood pressure depends on diet.

This is very clear when we look at the both diets in the same graph:

```{r}
bp_diet <- rbind(bp_diet_meatheavy, bp_diet_vegetarian)
ggplot(bp_diet, aes(x=mins_per_week, y=bp, col=diet)) + 
  geom_point() +
  geom_smooth(formula = y ~ x, method="lm") +
  theme_minimal() +
  labs(title="Blood pressure vs exercise",
       x="Minutes per week of exercise",
       y="Blood pressure",
       col="Diet") +
  ylim(60, 120)
```


::: {.callout-tip}
## Think, Pair, Share (#general-diet)

Can we say anything general about the effect of diet on blood pressure?
:::

No, we can't. We cannot, for example, state that a vegetarian diet lowers blood pressure. We can say, however, that a vegatarian diet lowers blood pressure of people that do little exercise.

::: {.callout-tip}
## Think, Pair, Share (#general-exercise)

Can we say anything general about the effect of exercise on blood pressure?
:::

Well, we can say that exercise lowers blood pressure, but we have to be careful. We have to say that exercise lowers blood pressure of people with a vegetarian diet more than of people with a meat heavy diet.


I think it is clear that the interaction was easier to see when we plotted all the data in one graph... it is much easier to visually compare the slopes of the two regression lines when they are on the same graph.

As we will see later in this chapter, the same holds true for statistical tests of interactions: it is much easier to make a statistical test of the interaction when we have all the data in one data frame. It is harder and is not recommended to make a separate regression for each level of the second variable (diet) and then compare the slopes of the regression lines (it is possible, just not at all efficient).


### Parallel and non-parallel effects

In the example above, the effect of exercise on blood pressure was stronger for people with a meat heavy diet than for people with a vegetarian diet. That is, the slope of the regression line was steeper for the meat heavy diet than for the vegetarian diet. Put another way, the regression lines are not parallel.

Parallel regression lines are evidence of no interaction. This means that the effect of one variable (exercise) is the same for all levels of another variable (diet).

When the regression lines are not parallel, there is evidence of an interaction. This means that the effect of one variable (exercise)  depends on the level of another variable (diet).





### Another example of an interaction

Two categorical variables: diet and exercise

```{r}
#| eval = FALSE
set.seed(1)
reps <- 1:10
bp_data_2cat <- crossing(diet = c("meat heavy", "vegetarian"),
         exercise = c("low", "high"),
         reps = reps) %>%
  mutate(bp = 100 - 10*(exercise=="high") - 5*(diet=="vegetarian") - 10*(exercise=="high" & diet=="vegetarian"), 
         error = rnorm(nrow(.), 0, 10),
         bp = bp + error) |> 
  arrange(reps, diet, exercise) |>
  mutate(exercise = relevel(factor(exercise), "low"))
write_csv(bp_data_2cat, here::here("data", "bp_data_2cat.csv"))
```

<a href="data/bp_data_2cat.csv" download>
  Download the dataset.
</a>

```{r}
#| echo = TRUE
bp_data_2cat <- read_csv(here::here("data", "bp_data_2cat.csv"))
head(bp_data_2cat)
```

```{r}
grouped_data <- group_by(bp_data_2cat, diet, exercise) %>%
  summarise(mean_bp = mean(bp), sd_bp = sd(bp), .groups = "drop")
ggplot(bp_data_2cat, aes(x=exercise, y=bp, col=diet)) + 
  geom_point(position=position_dodge(width=0.1)) + 
  geom_point(data = grouped_data, aes(x=exercise, y=mean_bp, col=diet),
             position=position_dodge(width=0.1), size=3) +
  geom_line(data = grouped_data, aes(x=exercise, y=mean_bp, group=diet),
            position=position_dodge(width=0.1)) +
  labs(title="Blood pressure vs exercise",
       x="Exercise",
       y="Blood pressure",
       col="Diet")
```

### And another example of an interaction

Two continuous explanatory variables (age and exercise minutes) and one continuous response variable (blood pressure)

```{r}
#| eval = FALSE
set.seed(1)
n <- 100
age <- runif(n, 20, 80)
mins_per_week <- runif(n, 0, 200)
bp <- 100 - 0.5*mins_per_week + 0.1*age + 0.005 * mins_per_week * age + rnorm(n, 0, 0.1)
bp_data_cont <- data.frame(bp, age, mins_per_week)
write_csv(bp_data_cont, here::here("data", "bp_data_cont.csv"))
```

<a href="data/bp_data_cont.csv" download>
  Download the dataset.
</a>


```{r}
#| echo = TRUE
bp_data_cont <- read_csv(here::here("data", "bp_data_cont.csv"))
head(bp_data_cont)
```

```{r}
ggplot(bp_data_cont, aes(x=mins_per_week, y=bp, col = age)) + 
  geom_point(size = 2) + 
  labs(title="Blood pressure vs exercise",
       x="Minutes per week of exercise",
       y="Blood pressure")
```

```{r}
ggplot(bp_data_cont, aes(x=age, y=bp, col = mins_per_week)) + 
  geom_point(size = 2) + 
  labs(title="Blood pressure vs age",
       x="Age",
       y="Blood pressure")
```

```{r}
#plot_ly(bp_data_cont, x = ~mins_per_week, y = ~age, z = ~bp, type = "scatter3d", mode = "markers", color = age)
```

```{r}
bp_data_cont <- bp_data_cont |>
  mutate(age_class = cut(age,
                   breaks = seq(10, 100, 10),
                   labels = c("10-20", "20-30", "30-40",
                              "40-50", "50-60", "60-70",
                              "70-80", "80-90", "90-100")),
         mins_per_week_class = cut(mins_per_week,
                             breaks = seq(0, 200, 20),
                             labels = c("0-20", "20-40", "40-60",
                                        "60-80", "80-100", "100-120",
                                        "120-140", "140-160", "160-180",
                                        "180-200")))
```


```{r}
ggplot(bp_data_cont, aes(x=mins_per_week, y=bp, col = age_class)) +
  geom_point(size = 2) + 
  geom_smooth(method = "lm", formula = y ~ x) +
  labs(title="Blood pressure vs exercise",
       x="Minutes per week of exercise",
       y="Blood pressure")
```

```{r}
ggplot(bp_data_cont, aes(x=age, y=bp, col = mins_per_week_class)) +
  geom_point(size = 2) + 
  geom_smooth(method = "lm", formula = y ~ x) +
  labs(title="Blood pressure vs age",
       x="Age",
       y="Blood pressure")
```




### Interactions and additivity of effects

Another way of thinking about this is that the effects of diet and exercise on blood pressure are not additive. If in one study we estimated the effect of diet on blood pressure we might find an effect size of 10. If in another study we estimated the effect of exercise on blood pressure we might find an effect size of 5.

::: {.callout-tip}
## Think, Pair, Share (#adding-effects)

If the effects of diet and exercise were additive, what would we expect the effect size to be if we estimated the effect of diet and exercise on blood pressure in the same study?
:::



If the effects are non-additive, we would expect the effect size to be different from additive. For example, if we found the combined effect of diet and exercise on blood pressure to be 30, we would say that the effects are non-additive. Their combined effect is more than the sum of their individual effects. This example is of a synergistic interaction because the combined effect (30) is greater than the sum of the individual effects (15).

### Drug interactions

When we are prescribed a medication, we are often asked if we are taking any other medications. This is because the effects of drugs can interact. For example, if we take two drugs that both lower blood pressure and they interfere with each other, the combined effect might be less than the sum of their individual effects. This is an antagonistic interaction. It could be worse than that though, the interaction might actually be harmful, which is why doctors are so careful about known and potential drug interactions.







## The maths bit

Let us return to the example of the effects of number of minutes of exercise and diet on blood pressure:

```{r}
ggplot(bp_diet, aes(x=mins_per_week, y=bp, col=diet)) + 
  geom_point() +
  geom_smooth(method="lm", formula = y ~ x) +
  theme_minimal() +
  labs(title="Blood pressure vs exercise",
       x="Minutes per week of exercise",
       y="Blood pressure",
       col="Diet")
```

We have one continuous explanatory variable (minutes of exercise) and one binary explanatory variable (diet) and one continuous response variable (blood pressure).


::: {.callout-tip}
## Think, Pair, Share (#without-interaction)

What would a linear model without an interaction term be?
:::


$$y_i = \beta_0 + \beta_1 x_{i}^{(1)} + \beta_2 x_{i}^{(2)} + \epsilon_i$$

where:

* $y_i$ is the blood pressure of the $i$th participant
* $x_1^{(i)} is the number of minutes of exercise of the $i$th participant
* $x_2^{(i)}$ is the diet of the $i$th participant
* $\beta_0$ is the intercept
* $\beta_1$ is the effect of exercise on blood pressure
* $\beta_2$ is the effect of diet on blood pressure
* $\epsilon_i$ is the error term for the $i$th participant.

This model is a multiple regression model in which one of the explanatory variables is binary.


::: {.callout-tip}
## Think, Pair, Share (#with-interaction)

What might the model look like if we wanted to include an interaction between diet and exercise?
:::



$$y_i = \beta_0 + \beta_1 x_{i}^{(1)} + \beta_2 x_{i}^{(2)} + \beta_3 (x_{i}^{(1)} x_{i}^{(2)}) + \epsilon_i$$

where:

* $x_{i}^{(1)}x_{i}^{(2)}$ is the product of the number of minutes of exercise and the diet of the $i$th participant.
* $\beta_3$ is the coefficient of the interaction term between diet and exercise.

We could also write this model as:

$$y_i = \beta_0 + \beta_1 x_{i}^{(1)} + \beta_2 x_{i}^{(2)} + \beta_3 x_{i}^{(3)} + \epsilon_i$$

where:

* $x_{i}^{(3)} = x_{i}^{(1)} x_{i}^{(2)}$

This is again a multiple regression model, but now with three explanatory variables.

::: {.callout-tip}
## Think, Pair, Share (#sketch-interaction)

Make sketches of the possible relationships between diet, exercise and blood pressure. Make a sketch compatible with $\beta_3 = 0$. Make a sketch compatible with $\beta_3 \neq 0$.
:::

## Hypothesis testing

If we want to test whether the effect of minutes of exercise on blood pressure is different for people with different diets, we need a null hypothesis to test.

::: {.callout-tip}
## Think, Pair, Share (#interaction-null)

What is the null hypothesis in this case, verbally, and in terms of the coefficients of the model?
:::

The null hypothesis is that the effect of minutes of exercise on blood pressure is the same for people with different diets. This is a null hypothesis of no interaction between diet and exercise. In terms of the coefficients of the model, the null hypothesis is that $\beta_3 = 0$.

If we reject the null hypothesis, we conclude that the effect of minutes of exercise on blood pressure is different for people with different diets. This is a non-additive effect.


## Doing it in R

Let us fit the model with the interaction term in R. There are two methods to do this and they are equivalent:

```{r}
#| echo = TRUE
mod1 <- lm(bp ~ mins_per_week + diet + mins_per_week:diet, data=bp_diet)
mod2 <- lm(bp ~ mins_per_week * diet, data=bp_diet)
```

The second is a shorthand for the first. The `*` operator includes the main effects (main effects are terms in the model that don't include interactions) and the interaction term. The `:` operator includes only the interaction term.

Of course, we check the model diagnostics before we interpret the results:

```{r}
par(mfrow=c(2,2))
plot(mod2, add.smooth=FALSE)
```

All of the plots look good.

Now, let us look at the coefficients of the model:

```{r}
summary(mod2)$coefficients
```

As expected, there are four coefficients.

The first is `(Intercept)`, which is the expected blood pressure for a person who does 0 minutes of exercise and is on diet "meat heavy".

The second is `mins_per_week`, which is the effect (slope) of minutes of exercise on blood pressure for a person on diet "meat heavy".

The third is `dietvegetarian`, which is the effect of being on a vegetarian diet on blood pressure for a person who does 0 minutes of exercise. This can be thought of as the change in the intercept for a person on a vegetarian diet compared to a person on a "meat heavy" diet.

The fourth is the interaction term `mins_per_week:dietvegetarian`, which is the difference in the effect (slope) of minutes of exercise on blood pressure for a person on a vegetarian diet compared to a person on a "meat heavy" diet.


::: {.callout-tip}
## Think, Pair, Share (#two-equations)

Write two equations, one for each of the two diets. They would look something like this: $y_i = 0.1 - 0.1 x_{i}^{(1)}$, but will have other numbers.
:::

## Reporting our findings

Of course a nice graph is always helpful. We already have quite a nice one:

```{r}
ggplot(bp_diet, aes(x=mins_per_week, y=bp, col=diet)) +
  geom_point() +
  geom_smooth(method="lm", se=FALSE, formula = y ~ x) +
  labs(title="Blood pressure vs exercise",
       x="Minutes per week of exercise",
       y="Blood pressure",
       col="Diet")
```

We also might want some tables summarizing the model results. Here is a table of the coefficients:

```{r}
kable(summary(mod2)$coefficients, format="html") %>%
  kable_styling()
```

We could also report the $R^2$ of the model:

```{r}
summary(mod2)$r.squared
```

And also a table of the variances of the terms in the model:

```{r}
kable(anova(mod2), format="html") %>%
  kable_styling()
```

We also might use a sentence like this to report the results: "The effect of minutes of exercise is generally negative, but the effect is stronger for people on a meat heavy diet than for people on a vegetarian diet ($t$-statistics of interaction term = `r round(summary(mod2)$coefficients[4,3],2)`, degree of freedom = 2, p = `r round(summary(mod2)$coefficients[4,4],2)`). The greater beneficial effect of exercise on blood pressure for people on a meat heavy diet is largely caused by the high blood pressure of people on a meat heavy diet that do not exercise."


## Multiple regression vs. many single regressions

Question: Why not just fit a separate simple regression model and then compare the two separately estimated slopes? That is, why not fit the two models:

$$y_i = \beta_{0,veg} + \beta_{1,veg} x_i^{(1)} + \epsilon_i$$ 

$$y_i = \beta_{0,meat} + \beta_{1,meat} x_i^{(2)} + \epsilon_i$$

and compare the estimate of $\beta_{1,veg}$ to the estimate of $\beta_{1,meat}$?

Well, you could do that, and could probably find a way to test for whether the difference in the slopes is different from 0. This would be a test of the null hypothesis that the effect of minutes of exercise on blood pressure is the same for people with different diets. But, this would be a more complicated way to do it, and would not be as general as the model with the interaction term. The model with the interaction term is more general, more flexible, and more elegant.


## Recap

* Binary and categorical explanatory variables.
* Interactions: a categorical explanatory variables allows for group-specific intercepts and slopes.
* The $F$-test is used to test if $\beta_1=\beta_2=...=\beta_k=0$ at the same time for a categorical explanatory variable with $k$ levels. Use the `anova` function in R to carry out this test.
* The $F$-test is a generalization of the $t$-test, because the latter is used to test $\beta_j = 0$ for one single variable $x^{(j)}$.  
* Test for a single $\beta_j=0$ $\rightarrow$ $t$-test.
* Test for several $\beta_2 = ... = \beta_{k}=0$ simultaneously $\rightarrow$ $F$-test.

Thus you will *always* need the $F$-test `anova()` to obtain a $p$-value for a categorial explanatory variable with more than 2 levels. This is because such a variable is represented by more than one coefficient in the model (remember the dummy variables).





